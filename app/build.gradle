apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename);
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.yuboyang.ilovemovie1"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
        buildConfigField "String", "TMDB_BASE_URL", "\"http://api.themoviedb.org/\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


ext {
    supportLibVersion = '25.1.1'
    okhttpVersion = '3.5.0'
    daggerVersion = '2.5'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //Support

    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:support-annotations:${supportLibVersion}"
    compile "com.android.support:palette-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"

    // Rx
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // Network
    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"

    // Glide
    compile "com.github.bumptech.glide:glide:3.7.0"
    compile "com.github.bumptech.glide:okhttp3-integration:1.4.0@aar"

    // Other
    compile 'net.jcip:jcip-annotations:1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.moshi:moshi:1.1.0'
    compile 'com.jakewharton:butterknife:7.0.1'

    // Dependency Injection
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    provided 'javax.annotation:jsr250-api:1.0'

    // Gson
    compile 'com.google.code.gson:gson:2.8.1'

    // Retrofit 2
    compile('com.squareup.retrofit2:retrofit:2.3.0') {
        exclude module: 'com.squareup.okio'
    }
    compile('com.squareup.retrofit2:converter-gson:2.3.0') {
        exclude module: 'com.squareup.okio'
    }

    // Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile "org.robolectric:robolectric:3.1.4"
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
}
